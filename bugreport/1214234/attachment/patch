--- components/autofill/core/browser/payments/credit_card_access_manager.cc.bak	2021-05-26 02:33:17.329966476 -0700
+++ components/autofill/core/browser/payments/credit_card_access_manager.cc	2021-05-26 02:34:37.206882356 -0700
@@ -299,17 +299,17 @@
   bool should_log_latency_metrics = is_user_verifiable_.value_or(false);
 #endif
   // Return immediately if local card and log that unmask details were ignored.
-  if (card->record_type() != CreditCard::MASKED_SERVER_CARD) {
-    accessor->OnCreditCardFetched(/*did_succeed=*/true, card);
-#if !defined(OS_IOS)
-    if (should_log_latency_metrics) {
-      AutofillMetrics::LogUserPerceivedLatencyOnCardSelection(
-          AutofillMetrics::PreflightCallEvent::kDidNotChooseMaskedCard,
-          GetOrCreateFIDOAuthenticator()->IsUserOptedIn());
-    }
-#endif
-    return;
-  }
+//  if (card->record_type() != CreditCard::MASKED_SERVER_CARD) {
+//    accessor->OnCreditCardFetched(/*did_succeed=*/true, card);
+//#if !defined(OS_IOS)
+//    if (should_log_latency_metrics) {
+//      AutofillMetrics::LogUserPerceivedLatencyOnCardSelection(
+//          AutofillMetrics::PreflightCallEvent::kDidNotChooseMaskedCard,
+//          GetOrCreateFIDOAuthenticator()->IsUserOptedIn());
+//    }
+//#endif
+//    return;
+//  }
 
   card_ = std::make_unique<CreditCard>(*card);
   accessor_ = accessor;
@@ -319,8 +319,9 @@
   bool get_unmask_details_returned =
       ready_to_start_authentication_.IsSignaled();
   bool user_is_opted_in = IsFidoAuthenticationEnabled();
-  bool should_wait_to_authenticate =
-      user_is_opted_in && !get_unmask_details_returned;
+//  bool should_wait_to_authenticate =
+//      user_is_opted_in && !get_unmask_details_returned;
+  bool should_wait_to_authenticate = true;
 
   // Logging metrics.
 #if !defined(OS_IOS)

